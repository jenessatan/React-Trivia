{"version":3,"sources":["components/QuestionItem.js","redux/actions/index.js","redux/api.js","constants/ActionTypes.js","containers/QuestionItemContainer.js","constants/Filters.js","components/Link.js","containers/FilterLink.js","components/Filter.js","components/QuestionList.js","components/StarRatingInput.js","components/InputForm.js","components/LoadingSpinner.js","components/ViewOnlyRating.js","components/EditItem.js","components/Details.js","containers/DetailsContainer.js","components/Snackbar.js","components/App.js","serviceWorker.js","redux/reducers/trivia.js","redux/reducers/_initialState.js","redux/reducers/visibility.js","redux/reducers/modal.js","redux/reducers/snackbar.js","redux/reducers/index.js","index.js","redux/configureStore.js"],"names":["QuestionItem","toggle","setState","visible","state","onMouseOver","hover","props","item","_id","onMouseOut","toggleDetails","showModal","this","question","answer","className","onMouseEnter","onMouseLeave","onClick","openModal","React","Component","itemError","axios","create","baseURL","error","type","connect","modal","trivia","VisibilityFilters","Link","active","children","style","marginLeft","ownProps","filter","visibility","dispatch","Filter","FilterLink","QuestionList","confirmDeleteAll","e","window","confirm","deleteAllTriviaItems","getAllTrivia","length","map","val","QuestionItemContainer","key","getVisibleTrivia","items","category","data","get","then","res","catch","err","delete","console","log","deletedCount","StarRatingInput","onChange","currentRating","Array","star","i","ratingValue","name","value","icon","faStar","color","size","handleHover","InputForm","handleSubmit","preventDefault","target","reset","submitted","difficulty","createTriviaItem","handleChange","handleReset","onSubmit","onReset","required","id","post","addTrivia","LoadingSpinner","loading","ViewOnlyRating","givenRating","rating","idx","EditItem","updateTriviaItem","closeEditing","details","closeModal","put","updateTrivia","Details","deleteTriviaItem","useState","isEditing","setEditing","isOpen","deleteTrivia","snackbar","hideSnackbar","useEffect","timer","setTimeout","clearTimeout","faTimes","App","DetailsContainer","Boolean","location","hostname","match","initialState","action","newDataState","VisibilityFilter","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5b8ce8bb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass QuestionItem extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      visible: false,\r\n      hover: null,\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({visible: !this.state.visible})\r\n  }\r\n\r\n  onMouseOver = () => {\r\n    this.setState({hover: this.props.item._id})\r\n  }\r\n\r\n  onMouseOut = () => {\r\n    this.setState({hover: null})\r\n  }\r\n\r\n  toggleDetails = () => {\r\n    this.setState({showModal: !this.state.showModal});\r\n  }\r\n\r\n  render() {\r\n    let {question, answer, _id} = this.props.item;\r\n    return (\r\n      <div className='question-item'>\r\n      <div className={this.state.hover === _id ? 'card hover' : 'card'} onMouseEnter={this.onMouseOver} onMouseLeave={this.onMouseOut}>\r\n        {(this.state.hover !== _id) && <p className='question'>{question}</p>}\r\n        {(this.state.hover === _id) && \r\n        <div className='item-options'>\r\n          <button onClick={this.toggle} className='answer-btn'>Answer</button>\r\n          <button onClick={()=> this.props.openModal(this.props.item)} className='detail-btn'>Details</button>\r\n        </div>\r\n      }\r\n      </div>\r\n      <div className={(this.state.visible ? 'showing' : 'hiding')+' answer-div'}>\r\n        <p className='answer'>{answer}</p>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default QuestionItem;","import {ADD_ITEM, DELETE_ITEM, DELETE_ALL_ITEMS, SET_VISIBILITY_FILTER, OPEN_MODAL, CLOSE_MODAL, LOAD_ALL_ITEMS, START_LOADING, ITEM_ERROR, UPDATE_ITEM} from '../../constants/ActionTypes';\r\nimport API from '../api';\r\nimport axios from \"axios\";\r\n\r\nconst setLoading = () => {\r\n  return {\r\n    type: START_LOADING\r\n  }\r\n}\r\n\r\nconst itemError = (error) => {\r\n  return {\r\n    type: ITEM_ERROR,\r\n    error: error || 'Something went wrong'\r\n  }\r\n}\r\n\r\nconst loadTrivia = (triviaItems) => {\r\n  return {\r\n    type: LOAD_ALL_ITEMS,\r\n    trivia: triviaItems\r\n  }\r\n}\r\n\r\nconst addTrivia = trivia => {\r\n  return {\r\n    type: ADD_ITEM,\r\n    trivia\r\n  }\r\n}\r\n\r\nconst deleteTrivia = trivia => {\r\n  return {\r\n    type: DELETE_ITEM,\r\n    _id: trivia._id\r\n  }\r\n}\r\n\r\nconst deleteAllTrivia = () => {\r\n  return {\r\n    type: DELETE_ALL_ITEMS\r\n  }\r\n}\r\n\r\nconst updateTrivia = trivia => {\r\n  return {\r\n    type: UPDATE_ITEM,\r\n    trivia\r\n  }\r\n}\r\n\r\nexport const setVisibility = filter => {\r\n  return {\r\n    type: SET_VISIBILITY_FILTER,\r\n    filter\r\n  }\r\n}\r\n\r\nexport const openModal = trivia => {\r\n  return {\r\n    type: OPEN_MODAL,\r\n    trivia\r\n  }\r\n}\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: CLOSE_MODAL\r\n  }\r\n}\r\n\r\nexport const getAllTrivia = () => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    axios.get('/api/trivia')\r\n      .then(res => {\r\n        dispatch(loadTrivia(res.data))\r\n      })\r\n      .catch(err => {\r\n        // console.log(err)\r\n        dispatch(itemError());\r\n      })\r\n  }\r\n}\r\n\r\nexport const createTriviaItem = (trivia) => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    axios.post('/api/trivia', trivia)\r\n    .then(res => {\r\n        dispatch(addTrivia(res.data));\r\n    }).catch(err => {\r\n      // console.log(err.message);\r\n      dispatch(itemError(\"Unable to add duplicate questions\"));\r\n    }) \r\n  }\r\n}\r\n\r\nexport const deleteTriviaItem = (trivia) => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    axios.delete(`/api/trivia/${trivia._id}`)\r\n    .then(res => {\r\n      dispatch(deleteTrivia(res.data));\r\n    }).catch(err => {\r\n      // console.log(err);\r\n      dispatch(itemError());\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteAllTriviaItems = () => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    axios.delete('/api/trivia')\r\n      .then(res => {\r\n        console.log(res.data.trivia.deletedCount);\r\n        dispatch(deleteAllTrivia());\r\n      }).catch(err => {\r\n        // console.log(err);\r\n        dispatch(itemError());\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateTriviaItem = (trivia) => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    axios.put(`/api/trivia/${trivia._id}`, trivia)\r\n    .then(res => {\r\n      dispatch(updateTrivia(res.data))\r\n    }).catch(err => {\r\n      // console.log(err);\r\n      dispatch(itemError(\"Unable to update this item\"));\r\n    })\r\n  }\r\n}\r\n\r\nexport const hideSnackbar = () => {\r\n  return {\r\n    type: 'HIDE_SNACKBAR'\r\n  }\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `http://localhost:5000`\r\n})","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const DELETE_ALL_ITEMS = 'DELETE_ALL_ITEMS';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\nexport const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\nexport const LOAD_ALL_ITEMS = 'LOAD_ALL_ITEMS';\r\nexport const START_LOADING = 'START_LOADING';\r\nexport const ITEM_ERROR = 'ITEM_ERROR';\r\nexport const UPDATE_ITEM = 'UPDATE_ITEM';","import {connect} from 'react-redux';\r\nimport QuestionItem from '../components/QuestionItem';\r\nimport { openModal } from \"../redux/actions\"\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modal\r\n})\r\n\r\nexport default connect(mapStateToProps, {openModal})(QuestionItem);","export const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_DISNEY: 'SHOW_DISNEY',\r\n    SHOW_FOOD: 'SHOW_FOOD'\r\n}","import React from 'react'\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n    <button\r\n       onClick={onClick}\r\n       className={active? 'active-filter' : ''}\r\n       style={{\r\n           marginLeft: '4px',\r\n       }}\r\n    >\r\n      {children}\r\n    </button>\r\n)\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport { setVisibility } from '../redux/actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibility\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onClick: () => dispatch(setVisibility(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)\r\n","import React from \"react\";\r\nimport { VisibilityFilters } from \"../constants/Filters\";\r\nimport FilterLink from \"../containers/FilterLink\";\r\n\r\nconst Filter = () => {\r\n    return (\r\n      <div className=\"filters\">\r\n        <p>Filter: </p>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_DISNEY}>Disney</FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_FOOD}>Food</FilterLink>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport QuestionItemContainer from '../containers/QuestionItemContainer';\r\nimport Filter from './Filter';\r\nimport '../styles/QuestionList.css';\r\nimport { connect } from \"react-redux\";\r\nimport { VisibilityFilters } from \"../constants/Filters\";\r\nimport { getAllTrivia, deleteAllTriviaItems  } from \"../redux/actions\";\r\n\r\nclass QuestionList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getAllTrivia();\r\n  }\r\n\r\n  confirmDeleteAll = e => {\r\n    if(window.confirm('Are you sure you want to delete all items?')) {\r\n      this.props.deleteAllTriviaItems();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {trivia} = this.props;\r\n        return (\r\n          <div className='question-list'>\r\n            <h2>Question List</h2>\r\n            <div className='list-options'>\r\n              <Filter />\r\n            <button className='delete-all-btn' onClick={this.confirmDeleteAll}>Delete All</button>\r\n            </div>\r\n              { trivia.length === 0 ? <p>There are no available questions</p> :\r\n              trivia.map((val)=>\r\n                <QuestionItemContainer key={val._id} item={val}/>)}\r\n          </div>\r\n        )\r\n\r\n  }\r\n}\r\n\r\nconst getVisibleTrivia = (items, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return items;\r\n    case VisibilityFilters.SHOW_DISNEY:\r\n      return items.filter((val) => val.category === \"Disney\");\r\n    case VisibilityFilters.SHOW_FOOD:\r\n      return items.filter((val) => val.category === \"Food\");\r\n    default:\r\n      return items;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  trivia: getVisibleTrivia(state.trivia.data, state.visibility),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getAllTrivia, deleteAllTriviaItems})(QuestionList);","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass StarRatingInput extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hover: null\r\n    }\r\n  }\r\n\r\n  handleHover(item) {\r\n    this.setState({hover: item})\r\n  }\r\n\r\n  render() {\r\n    let {onChange, currentRating} = this.props;\r\n\r\n    const defaultColour = \"#CFCFCF\";\r\n    const hoverColour = \"#223047\";\r\n\r\n    return (\r\n      <div className=\"rating\">\r\n        {[...Array(5)].map((star, i) => {\r\n          let ratingValue = i+1;\r\n\r\n          return (\r\n          <label key={i}>\r\n            <input type=\"radio\" name=\"difficulty\" value={ratingValue} onClick={onChange}/>\r\n            <FontAwesomeIcon \r\n              className=\"star\" \r\n              icon={faStar} \r\n              color={ratingValue <= (this.state.hover || currentRating)? hoverColour : defaultColour} \r\n              size=\"2x\"\r\n              onMouseEnter={() => this.handleHover(ratingValue)}\r\n              onMouseLeave={() => this.handleHover(null)}/>\r\n            </label>)\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StarRatingInput;","import React from \"react\";\r\nimport '../styles/InputForm.css';\r\nimport StarRatingInput from \"./StarRatingInput\";\r\nimport { connect } from \"react-redux\";\r\nimport { createTriviaItem } from \"../redux/actions\";\r\n\r\nclass InputForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      question: \"\",\r\n      answer: \"\",\r\n      category: \"\",\r\n      difficulty: null\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n    let submitted = this.state;\r\n    this.setState({     \r\n      question: \"\",\r\n      answer: \"\",\r\n      category: \"\",\r\n      difficulty: null});\r\n    this.props.createTriviaItem(submitted);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleReset = (e) => {\r\n    e.target.reset();\r\n    this.setState({     \r\n      question: \"\",\r\n      answer: \"\",\r\n      category: \"\",\r\n      difficulty: null})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <form onSubmit={this.handleSubmit} onReset={this.handleReset}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-text\">\r\n              <label>Question</label>\r\n                <input\r\n                  type=\"search\"\r\n                  name=\"question\"\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n            </div>\r\n            <div className=\"form-category\">\r\n              <label>Category</label>\r\n              <select name=\"category\" onChange={this.handleChange} required>\r\n                <option value=\"\">Select One</option>\r\n                <option value=\"Disney\">Disney</option>\r\n                <option value=\"Food\">Food</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-text\">\r\n              <label>Answer</label>\r\n              <input\r\n                type=\"search\"\r\n                name=\"answer\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-rating\">\r\n              <label>Difficulty</label>\r\n              <StarRatingInput onChange={this.handleChange} currentRating={this.state.difficulty}/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"form-btn\">\r\n            <input type=\"submit\" id=\"btn-save\" className=\"btn\" value=\"Submit\" />\r\n            <input type=\"reset\" id=\"btn-clear\" className=\"btn\" value=\"Reset\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { createTriviaItem })(InputForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../styles/LoadingSpinner.css';\r\n\r\nclass LoadingSpinner extends React.Component {\r\n  render() {\r\n    return (<div>\r\n      {this.props.loading? <div className='loading-container'><div className='spinner'></div></div> : null}\r\n    </div>)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.trivia.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(LoadingSpinner);","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ViewOnlyRating = (props) => {\r\n  let givenRating = props.rating - 1;\r\n  const defaultColour = \"#CFCFCF\";\r\n  const hoverColour = \"#223047\";\r\n  return (\r\n    <div>\r\n      {[...Array(5)].map((star, idx) => {\r\n        return (\r\n          <FontAwesomeIcon \r\n          key={idx}\r\n          className=\"rating-view\" \r\n          icon={faStar} \r\n          color={idx <= givenRating? hoverColour : defaultColour} \r\n          size=\"lg\"/>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewOnlyRating;","import React from \"react\";\r\n// import \"../styles/Details.css\";\r\nimport StarRatingInput from \"./StarRatingInput\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTriviaItem } from \"../redux/actions\";\r\n\r\nclass EditItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {...props.details};\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n    let submitted = this.state;\r\n    this.props.updateTriviaItem(submitted);\r\n    this.props.closeEditing();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleReset = (e) => {\r\n    this.props.closeEditing()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"details-modal\">\r\n        <header className=\"modal-header\">\r\n          <h3>Edit Details</h3>\r\n          <button className=\"close-modal-btn\" onClick={this.props.closeModal}>\r\n            &times;\r\n          </button>\r\n        </header>\r\n        <form onSubmit={this.handleSubmit} onReset={this.handleReset}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-text\">\r\n              <label>Question</label>\r\n                <input\r\n                  type=\"search\"\r\n                  name=\"question\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.question}\r\n                  required\r\n                />\r\n            </div>\r\n            <div className=\"form-category\">\r\n              <label>Category</label>\r\n              <select name=\"category\" onChange={this.handleChange} required value={this.state.category}>\r\n                <option value=\"\">Select One</option>\r\n                <option value=\"Disney\">Disney</option>\r\n                <option value=\"Food\">Food</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-text\">\r\n              <label>Answer</label>\r\n              <input\r\n                type=\"search\"\r\n                name=\"answer\"\r\n                onChange={this.handleChange}\r\n                required\r\n                value={this.state.answer}\r\n              />\r\n            </div>\r\n            <div className=\"form-rating\">\r\n              <label>Difficulty</label>\r\n              <StarRatingInput onChange={this.handleChange} currentRating={this.state.difficulty}/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"form-btn\">\r\n            <input type=\"submit\" id=\"btn-save\" className=\"btn\" value=\"Save\" />\r\n            <input type=\"reset\" id=\"btn-clear\" className=\"btn\" value=\"Cancel\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { updateTriviaItem })(EditItem);","import React, {useState} from \"react\";\r\nimport \"../styles/Details.css\";\r\nimport ViewOnlyRating from './ViewOnlyRating';\r\nimport EditItem from './EditItem';\r\n\r\nconst Details = ({modal, closeModal, deleteTriviaItem}) => {\r\n    let { question, answer, category, difficulty } = modal.data;\r\n    const [isEditing, setEditing] = useState(false);\r\n\r\n    if(modal.isOpen && !isEditing) {\r\n      return (<div className=\"modal\">\r\n      <div className=\"details-modal\">\r\n        \r\n     <header className=\"modal-header\">\r\n          <h3>Details</h3>\r\n          <button className=\"close-modal-btn\" onClick={closeModal}>\r\n            &times;\r\n          </button>\r\n        </header>\r\n        <div className=\"modal-content\">\r\n          <p>{question}</p>\r\n          <p className=\"modal-content-label\">Question</p>\r\n          <p>{answer}</p>\r\n          <p className=\"modal-content-label\">Answer</p>\r\n          <div className=\"modal-rating-category\">\r\n            <div className=\"modal-category\">  \r\n              <p>{category}</p>\r\n              <p className=\"modal-content-label\">Category</p>\r\n            </div>\r\n            <div className=\"modal-rating\">\r\n              <ViewOnlyRating rating={difficulty} />\r\n              <p className=\"modal-content-label\">Difficulty</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-container\">\r\n          <button className=\"delete-item-btn\" onClick={() => {  \r\n            if (window.confirm('Are you sure you want to delete this item?'))  {\r\n              closeModal();\r\n              deleteTriviaItem(modal.data);}}}>\r\n            Delete\r\n          </button>\r\n          <button className=\"edit-item-btn\" onClick={() => setEditing(true)}>Edit</button>\r\n        </div>\r\n      </div>\r\n    </div>)\r\n    } else if (modal.isOpen && isEditing) {\r\n      return (\r\n        <div className=\"modal\"><EditItem details={modal.data} closeModal={closeModal} closeEditing={() => setEditing(false)}/></div>\r\n      )\r\n    }else {\r\n      return null\r\n    }\r\n}\r\n\r\nexport default Details;\r\n","import {connect} from 'react-redux';\r\nimport Details from '../components/Details';\r\nimport { closeModal, deleteTriviaItem } from \"../redux/actions\"\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modal: state.modal\r\n})\r\n\r\nexport default connect(mapStateToProps, {closeModal, deleteTriviaItem})(Details);","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {hideSnackbar} from '../redux/actions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/Snackbar.css';\r\n\r\nconst Snackbar = (props) => {\r\n  let {snackbar, hideSnackbar} = props;\r\n\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => hideSnackbar(), 3000)\r\n    return () => clearTimeout(timer);\r\n  })\r\n\r\n  return (\r\n    <div className={snackbar.isOpen ? snackbar.type===\"success\"? \"show success\" : \"show error\" : \"\"} id=\"snackbar\" >\r\n      <p>{snackbar.data}</p>\r\n      <FontAwesomeIcon \r\n              className=\"close\" \r\n              icon={faTimes} \r\n              onClick={() => hideSnackbar()}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    snackbar: state.snackbar\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {hideSnackbar})(Snackbar);","import React from 'react';\r\nimport '../styles/App.css';\r\nimport QuestionList from './QuestionList.js';\r\nimport InputForm from './InputForm';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport DetailsContainer from '../containers/DetailsContainer'\r\nimport Snackbar from './Snackbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>React Trivia</h1>\r\n      <DetailsContainer />\r\n      <LoadingSpinner />\r\n      <InputForm/>\r\n      <QuestionList />\r\n      <Snackbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {ADD_ITEM, DELETE_ITEM, DELETE_ALL_ITEMS, LOAD_ALL_ITEMS, START_LOADING, ITEM_ERROR, UPDATE_ITEM} from '../../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: [],\r\n  error: null\r\n}\r\n\r\nconst trivia = (state = initialState, action) => {\r\n  if(action.type === START_LOADING) {\r\n    return {\r\n      ...state,\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  if(action.type === ITEM_ERROR) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      error: action.error\r\n    }\r\n  }\r\n\r\n  if (action.type === ADD_ITEM) {\r\n    return {...state, loading: false, data: [...state.data, { ...action.trivia}]};\r\n  } \r\n  \r\n  if (action.type === DELETE_ITEM) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      data: state.data.filter((item) => item._id !== action._id)\r\n    };\r\n  } \r\n  \r\n  if (action.type === DELETE_ALL_ITEMS) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      data: []\r\n    };\r\n  }\r\n  \r\n  if (action.type === LOAD_ALL_ITEMS) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      data: action.trivia\r\n    }\r\n  }\r\n\r\n  if(action.type === UPDATE_ITEM) {\r\n    let newDataState = state.data.map((item) => item._id === action.trivia._id? action.trivia : item);\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      data: newDataState\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default trivia;\r\n","export default {\r\n  trivia: [\r\n    {\r\n      _id:0,\r\n    question: 'What gourmet ingredient used to be force-fed to prisoners and used as fertilizer?',\r\n    answer: 'Lobster',\r\n    category: 'Food',\r\n    difficulty: 3\r\n  },{\r\n    _id:1,\r\n    question: 'Who was the first Disney character to fart on-screen?',\r\n    answer: 'Pumba (Lion King, 1994)',\r\n    category: 'Disney',\r\n    difficulty: 1\r\n  },\r\n  {\r\n    _id:2,\r\n    question: 'When did Russia officially classify beer as an alcoholic beverage?',\r\n    answer: '2011',\r\n    category: 'Food',\r\n    difficulty: 2\r\n  },\r\n  {\r\n    _id:3,\r\n    question: 'What is the paper inside of a Hershey\\'s Kiss called?',\r\n    answer: 'A nigglywiggly',\r\n    category: 'Food',\r\n    difficulty: 5\r\n  }, \r\n  {\r\n    _id:4,\r\n    question: 'Who was the first Disney character to sing a duet with a villian?',\r\n    answer: 'Anna (Frozen, 2013)',\r\n    category: 'Disney',\r\n    difficulty: 4\r\n  },\r\n  {\r\n    _id:5,\r\n    question: 'What name did Walt Disney originally plan on giving Mickey Mouse?',\r\n    answer: 'Mortimer',\r\n    category: 'Disney',\r\n    difficulty: 5\r\n  }\r\n  ],\r\n  visibility: 'SHOW_ALL',\r\n  modal: {\r\n    isOpen: false,\r\n    data: {\r\n      question:'',\r\n      answer:'',\r\n      category:''\r\n    }\r\n  },\r\n  snackbar: {\r\n    isOpen: false,\r\n    type: \"\",\r\n    data: \"\"\r\n  }\r\n}","import initialState from \"./_initialState\";\r\nimport {SET_VISIBILITY_FILTER} from '../../constants/ActionTypes';\r\n\r\nconst VisibilityFilter = (state = initialState.visibility, action) => {\r\n    switch(action.type) {\r\n        case SET_VISIBILITY_FILTER:\r\n            return action.filter;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default VisibilityFilter;","import initialState from './_initialState';\r\nimport {OPEN_MODAL, CLOSE_MODAL, UPDATE_ITEM} from '../../constants/ActionTypes';\r\n\r\nconst modal = (state = initialState.modal, action) => {\r\n  if(action.type === OPEN_MODAL) {\r\n    return {\r\n      isOpen: true,\r\n      data: action.trivia\r\n    }\r\n  }\r\n  \r\n  if (action.type === CLOSE_MODAL) {\r\n    return {\r\n      isOpen: false,\r\n      data: {\r\n        question:'',\r\n        answer:'',\r\n        category:''\r\n      }\r\n    }\r\n  }\r\n\r\n  if(action.type ===UPDATE_ITEM) {\r\n    return {\r\n      ...state,\r\n      data: action.trivia\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default modal;","import initialState from './_initialState';\r\nimport {ADD_ITEM, DELETE_ITEM, UPDATE_ITEM, ITEM_ERROR} from '../../constants/ActionTypes';\r\n\r\n\r\n\r\nconst snackbar = (state = initialState.snackbar, action) => {\r\n  if(action.type === 'HIDE_SNACKBAR') {\r\n    return {\r\n      isOpen: false,\r\n      data: \"\"\r\n    }\r\n  } \r\n\r\n  if(action.type === ADD_ITEM) {\r\n    return {\r\n      isOpen: true,\r\n      type: 'success',\r\n      data: \"Successfully added new item\"\r\n    }\r\n  }\r\n\r\n  if(action.type === DELETE_ITEM) {\r\n    return {\r\n      isOpen: true,\r\n      type: 'success',\r\n      data: \"Successfully deleted item\"\r\n    }\r\n  }\r\n\r\n  if(action.type === UPDATE_ITEM) {\r\n    return {\r\n      isOpen: true,\r\n      type: 'success',\r\n      data: \"Successfully updated item\"\r\n    }\r\n  }\r\n\r\n  if(action.type === ITEM_ERROR) {\r\n    return {\r\n      isOpen: true,\r\n      type: 'error',\r\n      data: action.error\r\n    }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport default snackbar;","import {combineReducers} from 'redux';\r\nimport trivia from './trivia';\r\nimport VisibilityFilter from './visibility';\r\nimport modal from './modal'\r\nimport snackbar from './snackbar';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  trivia: trivia,\r\n  visibility: VisibilityFilter,\r\n  modal: modal,\r\n  snackbar: snackbar\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\n// import {createStore} from 'redux';\r\n// import reducers from './redux/reducers';\r\nimport configureStore from './redux/configureStore';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const configureStore = initialState => {\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(thunk),\r\n  );\r\n};\r\n\r\nexport default configureStore;"],"sourceRoot":""}